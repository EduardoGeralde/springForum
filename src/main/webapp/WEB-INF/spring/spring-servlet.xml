<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.3.xsd">
	
	<!-- Enable Spring MVC to work based on annotations -->
	<mvc:annotation-driven />
	<!-- Enable annotations on Spring IoT/DI -->
	<context:annotation-config />
	<!-- Search for @Controller components type in the package below -->
	<context:component-scan base-package="com.eduardoPortfolio.springForum.controllers"/>
    <!--tells where the static content can be found. (images, css, JS, etc)-->
	<mvc:resources location="/resources/" mapping="/resources/**" cache-period="120"/>
	<!-- We don't have to define name, Spring MVC search for type, ViewResolver in this case
	We change this View Resolver to the another one below, to work with Tiles
	<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
    <property name="prefix" value="/views"/>
    <property name="suffix" value=".jsp"/>
	</bean> -->
	 <!-- Changing the View Resolver to use Tiles-->
	 <bean id="tilesViewResolver" class="org.springframework.web.servlet.view.UrlBasedViewResolver">
    	<property name="viewClass" value="org.springframework.web.servlet.view.tiles3.TilesView"/>
	</bean>
	<!-- We to tell Tiles which configuration files it will use. We don't need to provide name
	because our View Resolver configured through Tiles will always search for another
	TilesConfigurer bean to work correctly -->
	 <bean class="org.springframework.web.servlet.view.tiles3.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/tiles/tiles-config.xml</value>
			</list>
		</property>
	</bean>
	<!-- Bean to enable upload file in our project, it intercepts form requests with 
	enctype=multipart/form-data. This Bean has to have the name "multipartResolver", because
	the Dispatcher Servlet will search for a bean with exactly this name  -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="1048576"/>
	</bean>
	
</beans>
